顺序表：
  逻辑上与物理存储结构上都连续的一种结构，一般分为静态顺序表和动态顺序表；现实中大多不确定需要储存的数据的数量，所以多采用动态的顺序表。
    1）静态顺序表：使用定长数组进行数据存储，在栈上开辟空间，例如数组就是静态顺序表；
    2）动态顺序表：使用动态开辟的数组进行数据处理，在堆上开辟空间；
  顺序表的优点和缺点：
    1）优点：申请的空间连续，不易产生内存碎片；
             支持随机访问；
    2）缺点：增容需要申请新空间，拷贝数据，释放旧空间，会产生不小的消耗；
             顺序表增容底层一般按照二倍/一点五倍增容，若只需插入的数据量少，会造成资源浪费；
             若插入/删除数据的位置不为尾部，时间复杂度会为O(N)；
       
      
链表：
  逻辑上连续，但物理存储上不连续的一种结构，数据的逻辑连续是依靠链表中的指针连接次序实现的，根据单向、双向、带头、不带头、非循环、双循环可组成八种链表结构，
而现实中最常见的结构为无头单向非循环链表和带头双向循环链表。
    1）无头单向非循环链表：一般不存储数据，多为其他数据结构的子结构，例如：哈希桶；
    2）带头双向循环链表：一般用于存储数据；
  链表的优点和缺点：
    1）优点：任意位置插入/删除的时间复杂度都是O(1)；
             增容的代价小，插入一个数据时创建一个节点即可；
    2）缺点：申请的空间一般不连续，容易产生内存碎片；
             不支持随机访问，查询的时间复杂度为O(N)；
             
顺序表和链表各有优缺点，到具体的实践中，需根据情况进行判断使用哪种数据结构，需要频繁查询的时候，顺序表更加合适，需要频繁插入/删除的时候，链表更加合适。
             
             
做链表笔试题的基本思路：
  1.哨兵节点：无头单向非循环链表类的题，在第一个节点前创建一个节点可以起到更好的遍历结果；
  2.快慢指针：通过调整两个指针的初始距离/遍历速度，可以访问到特定的某个节点；
